{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,SAGvC,SAASC,EAAcC,EAAUC,GAC7B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACPH,EACFF,EAAQ,qBAAoCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAElDG,EAAO,oBAAmCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,SAE/CA,MAXPL,EAAQc,iBAAiB,UAezB,SAA2BC,GACzBA,EAAEC,iBAKA,IAJF,IAAIX,EAAQY,OAAOjB,EAAQkB,SAASb,MAAMc,OACpCC,EAAOH,OAAOjB,EAAQkB,SAASE,KAAKD,OACpCE,EAASJ,OAAOjB,EAAQkB,SAASG,OAAOF,OAEnCG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAClCnB,EAAcmB,EAAGjB,GACdkB,MAAK,SAAAC,G,OAAYC,EAAA3B,GAAS4B,OAAOC,QAAQH,MACvCI,OAAM,SAAAJ,G,OAAWC,EAAA3B,GAAS4B,OAAOG,QAAQL,MAC5CnB,GAASe,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', handlerFormSubmit);\n\nfunction createPromise(position, delay) {  \n    return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n    if (shouldResolve) {\n      resolve(`Fullfiled promise ${position} in ${delay}ms`);\n    } else {\n      reject(`Rejected promise ${position} in ${delay}ms`);\n    }\n    }, delay);\n  });    \n}  \n\nfunction handlerFormSubmit(e) {\n  e.preventDefault();\n  let delay = Number(formRef.elements.delay.value);\n  const step = Number(formRef.elements.step.value);\n  const amount = Number(formRef.elements.amount.value);     \n      \n    for (let i = 1; i <= amount; i += 1) {       \n    createPromise(i, delay)\n      .then(message =>  Notiflix.Notify.success(message))\n        .catch(message => Notiflix.Notify.failure(message));     \n      delay += step;\n  }    \n}\n\n\n\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","addEventListener","e","preventDefault","Number","elements","value","step","amount","i","then","message","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.50ca8c54.js.map"}